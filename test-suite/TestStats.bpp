@include_once <SharedVar>
@class TestStats {
	@private @SharedVar* passedTests=@new SharedVar
	@private @SharedVar* failedTests=@new SharedVar
	@private @SharedVar* untestedTests=@new SharedVar

	@public @method init {
		@this.passedTests.set 0
		@this.failedTests.set 0
		@this.untestedTests.set 0
	}

	@public @method clean {
		@delete @this.passedTests
		@delete @this.failedTests
		@delete @this.untestedTests
	}

	@public @method incrementFailedTests {
		@this.failedTests.lock
		@this.failedTests.set $((@this.failedTests.get + 1)) # Increment failed tests
		@this.failedTests.unlock
	}

	@public @method incrementPassedTests {
		@this.passedTests.lock
		@this.passedTests.set $((@this.passedTests.get + 1)) # Increment passed tests
		@this.passedTests.unlock
	}

	@public @method incrementUntestedTests {
		@this.untestedTests.lock
		@this.untestedTests.set $((@this.untestedTests.get + 1)) # Increment untested tests
		@this.untestedTests.unlock
	}

	@public @method getFailCount {
		@this.failedTests.get
	}

	@public @method getPassCount {
		@this.passedTests.get
	}

	@public @method getUntestedCount {
		@this.untestedTests.get
	}

	@public @method toPrimitive {
		local pass_count=@this.getPassCount
		local fail_count=@this.getFailCount
		local untested_count=@this.getUntestedCount
		echo "Tests Passed: $pass_count"
		echo "Tests Failed: $fail_count"
		echo "Tests Untested: $untested_count"
		@this.clean
		if [[ $fail_count -gt 0 ]] || [[ $untested_count -gt 0 ]]; then
			exit 1
		fi
	}
}
